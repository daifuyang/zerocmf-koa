paths:
  /api/v1/currentUser:
    get:
      summary: 获取当前用户信息
      description: 根据提供的 JWT 令牌获取当前用户信息。
      operationId: currentUser
      security:
        - BearerAuth: []
      tags:
        - users
      responses:
        "200":
          description: 成功获取用户信息
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResp"
              example:
                {
                  "userId": 1,
                  "loginName": "admin",
                  "email": null,
                  "phone": null,
                  "nickname": "admin",
                  "realName": null,
                  "gender": 0,
                  "birthday": null,
                  "userType": 1,
                  "name": null,
                  "avatar": null,
                  "loginIp": null,
                  "loginTime": null,
                  "status": 1,
                  "createdAt": "1723613053",
                  "updatedAt": "1723613053"
                }
        "401":
          description: 未授权或身份已过期
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnAuthorized"

  /api/v1/admin/users:
    get:
      summary: 获取管理员用户列表
      description: 获取管理员用户的列表，支持分页列表或全部列表，并支持通过登录名、手机号和状态进行筛选。
      operationId: getUsers
      security:
        - BearerAuth: []
      tags:
        - admins
      parameters:
        - name: "current"
          in: "query"
          required: false
          description: "当前页"
          schema:
            type: "string"
            default: "1"
        - name: "pageSize"
          in: "query"
          required: false
          description: "每页数量"
          schema:
            type: "string"
            default: "10"
        - name: loginName
          in: query
          description: 通过登录名筛选
          required: false
          schema:
            type: string
        - name: phone
          in: query
          description: 通过手机号筛选
          required: false
          schema:
            type: string
        - name: status
          in: query
          description: 通过状态筛选，0表示禁用，1表示启用
          required: false
          schema:
            type: string
      responses:
        "200":
          description: 用户角色的分页列表。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserListResp"
              example:
                {
                  "code": 1,
                  "msg": "获取成功！",
                  "data":
                    [
                      {
                        "userId": 1,
                        "loginName": "admin",
                        "email": null,
                        "phone": null,
                        "nickname": "admin",
                        "realname": null,
                        "gender": 0,
                        "birthday": null,
                        "userType": 1,
                        "name": null,
                        "avatar": null,
                        "loginIp": null,
                        "loginTime": null,
                        "status": 1,
                        "createdAt": "1723613053",
                        "updatedAt": "1723613053",
                        "deletedAt": "0"
                      }
                    ],
                  "page": 1,
                  "pageSize": 10,
                  "total": 1
                }
    post:
      summary: 添加管理员用户
      description: 添加新的管理员用户。
      operationId: addUser
      security:
        - BearerAuth: []
      tags:
        - admins
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserSaveReq"
            example:
              {
                "loginName": "admin",
                "email": "example@qq.com",
                "phone": "12345678910",
                "nickname": "admin",
                "realname": "admin",
                "password": "123456",
                "gender": 1,
                "birthday": "12345678910",
                "userType": 1,
                "avatar": null,
                "status": 1
              }
      responses:
        "200":
          description: 管理员用户创建成功。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResp"
              example:
                {
                  "code": 1,
                  "msg": "创建成功！",
                  "data":
                    {
                      "userId": 1,
                      "loginName": "admin",
                      "email": example@qq.com,
                      "phone": "12345678910",
                      "nickname": "admin",
                      "realname": "admin",
                      "gender": 1,
                      "birthday": "12345678910",
                      "userType": 1,
                      "avatar": null,
                      "status": 1,
                      "loginIp": "127.0.0.1",
                      "loginTime": "12345678910",
                      "createdAt": "1723613053",
                      "updatedAt": "1723613053"
                    }
                }
  /api/v1/admin/users/{userId}:
    get:
      summary: 查看管理员用户详情
      description: 通过ID获取管理员用户的详细信息。
      operationId: getUser
      security:
        - BearerAuth: []
      tags:
        - admins
      parameters:
        - name: userId
          in: path
          description: 管理员用户的ID
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: 管理员用户详情。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResp"
              example:
                {
                  "code": 1,
                  "msg": "获取成功！",
                  "data":
                    {
                      "userId": 1,
                      "loginName": "admin",
                      "email": null,
                      "phone": null,
                      "nickname": "admin",
                      "realname": null,
                      "gender": 0,
                      "birthday": null,
                      "userType": 1,
                      "name": null,
                      "avatar": null,
                      "loginIp": "127.0.0.1",
                      "loginTime": "12345678910",
                      "status": 1,
                      "createdAt": "1723613053",
                      "updatedAt": "1723613053",
                      "deletedAt": "0"
                    }
                }
    put:
      summary: 编辑管理员用户信息
      description: 通过ID编辑管理员用户信息。
      operationId: updateUser
      security:
        - BearerAuth: []
      tags:
        - admins
      parameters:
        - name: userId
          in: path
          description: 管理员用户的ID
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserSaveReq"
            example:
              {
                "loginName": "admin",
                "email": "example@qq.com",
                "phone": "12345678910",
                "nickname": "admin",
                "realname": "admin",
                "password": "123456",
                "gender": 1,
                "birthday": "12345678910",
                "userType": 1,
                "avatar": null,
                "status": 1
              }
      responses:
        "200":
          description: 管理员用户编辑成功。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResp"
              example:
                {
                  "code": 1,
                  "msg": "编辑成功！",
                  "data":
                    {
                      "userId": 1,
                      "loginName": "admin",
                      "email": "example@qq.com",
                      "phone": 12345678910,
                      "nickname": "admin",
                      "realname": "admin",
                      "gender": 1,
                      "birthday": 12345678910,
                      "userType": 1,
                      "avatar": null,
                      "status": 1,
                      "loginIp": "127.0.0.1",
                      "loginTime": "12345678910",
                      "createdAt": "1723613053",
                      "updatedAt": "1723613053"
                    }
                }
    delete:
      summary: 删除管理员用户
      description: 通过ID删除管理员用户。
      operationId: deleteUser
      security:
        - BearerAuth: []
      tags:
        - admins
      parameters:
        - name: userId
          in: path
          description: 管理员用户的ID
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: 管理员用户删除成功。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResp"
              example:
                {
                  "code": 1,
                  "msg": "删除成功！",
                  "data":
                    {
                      "userId": 1,
                      "loginName": "admin",
                      "email": "example@qq.com",
                      "phone": 12345678910,
                      "nickname": "admin",
                      "realname": "admin",
                      "gender": 1,
                      "birthday": 12345678910,
                      "userType": 1,
                      "avatar": null,
                      "status": 1,
                      "loginIp": "127.0.0.1",
                      "loginTime": "12345678910",
                      "createdAt": "1723613053",
                      "updatedAt": "1723613053"
                    }
                }

components:
  schemas:
    Response:
      type: object
      required:
        - code
        - msg
      properties:
        code:
          type: integer
          description: Response code
          example: 1
        msg:
          type: string
          description: Response message
    UnAuthorized:
      type: object
      required:
        - msg
      properties:
        msg:
          type: string
          description: Response message
          example: 用户身份已过期
    User:
      type: object
      properties:
        userId:
          type: integer
          description: 用户ID
          example: 1
        loginName:
          type: string
          description: 登录名
          example: "admin"
        email:
          type: string
          format: email
          description: 邮箱地址
          nullable: true
          example: "example@qq.com"
        phone:
          type: string
          description: 手机号码
          nullable: true
          example: "12345678910"
        nickname:
          type: string
          description: 昵称
          nullable: true
          example: "admin"
        realname:
          type: string
          description: 真实姓名
          nullable: true
          example: "admin"
        gender:
          type: integer
          description: 性别，1表示男性，0表示女性
          enum: [0, 1]
          example: 1
        birthday:
          type: string
          description: 出生日期（Unix 时间戳）
          nullable: true
          example: "12345678910"
        userType:
          type: integer
          description: 用户类型，1 表示管理员
          example: 1
        avatar:
          type: string
          description: 用户头像URL
          nullable: true
          example: null
        loginIp:
          type: string
          description: 最后登录IP
          nullable: true
          example: "127.0.0.1"
        loginTime:
          type: string
          description: 最后登录时间（Unix 时间戳）
          nullable: true
          example: "12345678910"
        status:
          type: integer
          description: 状态，0表示禁用，1表示启用
          enum: [0, 1]
          example: 1
        createdAt:
          type: string
          description: 创建时间（Unix 时间戳）
          example: "1723613053"
        updatedAt:
          type: string
          description: 更新时间（Unix 时间戳）
          example: "1723613053"
        deletedAt:
          type: string
          description: 删除时间（Unix 时间戳），0表示未删除
          example: "0"
      required:
        - userId
        - loginName
        - userType
        - status
        - createdAt
        - updatedAt
    UserListResp:
      allOf:
        - $ref: "#/components/schemas/Response"
        - type: object
          properties:
            data:
              type: array
              description: 用户列表
              items:
                $ref: "#/components/schemas/User"
            page:
              type: integer
              description: 当前页码
              example: 1
            pageSize:
              type: integer
              description: 每页数量
              example: 10
            total:
              type: integer
              description: 总记录数
              example: 1
    UserResp:
      allOf:
        - $ref: "#/components/schemas/Response"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/User"
          required:
            - data
    UserSaveReq:
      type: object
      required:
        - loginName
        - status
      properties:
        loginName:
          type: string
          description: 登录名
          example: "admin"
        email:
          type: string
          format: email
          description: 邮箱地址
          example: "example@qq.com"
        phone:
          type: string
          description: 手机号码
          example: "12345678910"
        nickname:
          type: string
          description: 昵称
          example: "admin"
        realname:
          type: string
          description: 真实姓名
          example: "admin"
        password:
          type: string
          description: 登录密码
          example: "123456"
        gender:
          type: integer
          description: 性别，1表示男性，0表示女性
          enum: [0, 1]
          example: 1
        birthday:
          type: string
          description: 出生日期（Unix 时间戳）
          example: "12345678910"
        userType:
          type: integer
          description: 用户类型，1 表示管理员
          example: 1
        avatar:
          type: string
          description: 用户头像URL
          nullable: true
          example: null
        status:
          type: integer
          description: 状态，0表示禁用，1表示启用
          enum: [0, 1]
          example: 1
