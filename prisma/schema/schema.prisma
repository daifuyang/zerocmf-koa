// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["prismaSchemaFolder"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// 用户表
model SysUser {
  userId    Int     @id @default(autoincrement()) @map("user_id")
  loginName String? @unique @map("login_name") // 用户名可选，因为可能使用手机号或邮箱作为主要登录方式
  email     String? @unique // 邮箱可选，因为可能使用手机号作为主要登录方式
  phone     String? @unique // 手机号可选，可以支持手机号登录
  password  String? // 如果用户使用第三方登录，密码可以为空
  salt      String? // 密码盐值
  nickname  String? // 用户的昵称
  realname  String? // 用户的真实姓名
  gender    Int     @default(0) @db.TinyInt // 用户性别，0 表示未知，1 表示男，2 表示女
  birthday  Int? // 用户的生日
  userType  Int     @default(0) @map("user_type") @db.TinyInt // 用户类型, 0 未激活，1 管理员，2 普通用户
  avatar    String? // 头像
  loginIp   String? @map("login_ip") // 最后登录IP
  loginAt   Int?    @map("login_at") // 最后登录时间
  status    Int     @default(1) @db.TinyInt // 用户状态，0 表示正常，1 表示禁用
  remark    String  @default("") @map("remark") @db.VarChar(500) // 备注
  createdAt Int     @default(0) @map("created_at") // 使用 UNIX 时间戳（毫秒）
  updatedAt Int     @map("updated_at") // 更新时间，使用 int 类型
  deletedAt Int     @default(0) @map("deleted_at") // 删除时间，使用 int 类型

  @@index([userId, loginName, phone, email])
  @@map("sys_user")

}

// token表
model SysUserToken {
  id           Int    @id @default(autoincrement())
  userId       Int    @map("user_id") // 用户ID
  accessToken  String @unique @map("access_token") // token
  expiresAt    Int    @map("expires_at") // token过期时间
  refreshToken String @unique @map("refresh_token") // 刷新token
  reExpiresAt  Int    @map("re_expires_at") // 刷新token过期时间

  @@map("sys_user_token")
}

// 角色表
model SysRole {
  roleId      Int     @id @default(autoincrement())
  name        String // 角色名称
  description String? // 角色描述
  sortOrder   Int     @default(1) @map("sort_order") @db.TinyInt // 排序
  status      Int     @default(1) @db.TinyInt // 角色状态，0 表示禁用，1 表示正常
  createdAt   Int     @map("create_at") // 使用 UNIX 时间戳（毫秒）
  updatedAt   Int     @map("update_at") // 更新时间，使用 int 类型
  deletedAt   Int     @default(0) @map("delete_at") // 删除时间，使用 int 类型

  @@index([roleId, name])
  @@map("sys_role")
}

// 系统配置表
model SysOption {
  optionName  String @map("option_name") @db.VarChar(64)
  optionValue String @map("option_value") @db.Text

  @@unique([optionName])
  @@map("sys_option")
}

// 菜单表
model SysMenu {
  menuId    Int     @id @default(autoincrement()) @map("menu_id") // 菜单ID
  menuName  String  @map("menu_name") @db.VarChar(50) // 菜单名称
  parentId  Int     @default(0) @map("parent_id") // 父菜单ID
  sortOrder Int     @default(1) @map("sort_order") @db.TinyInt // 排序
  path      String  @default("") @map("path") @db.VarChar(200) // 路由地址
  component String? @map("component") @db.VarChar(255) // 组件路径
  query     String? @map("query") @db.VarChar(255) // 路由参数
  isFrame   Int     @default(0) @map("is_frame") // 是否为外链 （0否 1是）
  isCache   Int     @default(0) @map("is_cache") // 是否缓存（0不缓存 1缓存）
  menuType  Int     @default(0) @map("menu_type") @db.TinyInt // 菜单类型 （0目录 1菜单 2按钮）
  visible   Int     @default(1) @map("visible") @db.TinyInt // 菜单状态（0隐藏 1显示）
  status    Int     @default(1) @map("status") @db.TinyInt // 菜单状态（0停用 1正常）
  perms     String? @map("perms") @db.VarChar(100) // 权限标识
  icon      String  @map("icon") @db.VarChar(100) // 菜单图标
  createdId Int?    @map("created_id")
  createdBy String  @default("") @map("created_by") @db.VarChar(64)
  createdAt Int?    @map("created_at")
  updatedId Int?    @map("updated_id")
  updatedBy String  @default("") @map("updated_by") @db.VarChar(64)
  updatedAt Int?    @map("updated_at")
  remark    String  @default("") @map("remark") @db.VarChar(500)

  @@index([menuId, menuName, perms])
  @@map("sys_menu")
}

// 权限表
model casbinRule {
  ptype String
  v0    String
  v1    String
  v2    String?
  v3    String?
  v4    String?
  v5    String?

  @@id([ptype, v0, v1]) // 联结表的复合主键
  @@map("casbin_rule")
}

// 系统接口表
model SysApi {
  id          Int     @id @default(autoincrement())
  path        String // 路径
  method      String // 方法
  description String? // 描述
  group       String? // 分组

  @@unique([path, method])
  @@map("sys_api")
}

// 接口菜单关系表
model SysMenuApi {
  menuId Int @map("menu_id")
  apiId  Int @map("api_id")

  @@unique([menuId, apiId])
  @@map("sys_menu_api")
}

// 媒体资源表
model SysMedia {
  mediaId    Int     @id @default(autoincrement()) @map("media_id") ///   主键ID
  fileSize   BigInt  @map("file_size") @db.BigInt /// 文件大小
  fileKey    String  @map("file_key") @db.VarChar(64) /// 文件唯一标识符或密钥
  remarkName String  @map("remark_name") @db.VarChar(100) /// 备注名称
  fileName   String  @map("file_name") @db.VarChar(100) /// 文件原始名称
  filePath   String  @map("file_path") @db.VarChar(100) /// 文件在服务器上的路径
  resolution String? @db.VarChar(32) /// 分辨率
  fileMd5    String  @map("file_md5") @db.VarChar(32) /// 文件MD5哈希值
  fileSha1   String  @map("file_sha1") @db.VarChar(40) /// 文件SHA1哈希值
  extension  String  @db.VarChar(10) /// 文件扩展名
  mimetype   String  @map("mimetype") @db.VarChar(100) /// 文件MIME类型
  mediaType  Int     @map("media_type") @db.TinyInt /// 资源类型
  status     Int     @default(1) @db.TinyInt /// 1.表示启用 2.表示禁用
  categoryId Int?    @map("category_id") /// 分类ID
  createdId  Int?    @map("created_id") /// 创建者的ID
  createdBy  String  @default("") @map("created_by") @db.VarChar(64)
  createdAt  Int?    @map("created_at")
  deletedAt  Int     @default(0) @map("delete_at") // 删除时间，使用 int 类型

  @@map("sys_media")
}

// 媒体资源分类表
model SysMediaCategory {
  categoryId Int    @id @default(autoincrement()) @map("category_id")
  parentId   Int    @default(0) @map("parent_id")
  name       String @map("name") @db.VarChar(50)
  sortOrder  Int    @default(1) @map("sort_order") @db.TinyInt
  status     Int    @default(1) @map("status") @db.TinyInt
  createdId  Int?   @map("created_id")
  createdBy  String @default("") @map("created_by") @db.VarChar(64)
  createdAt  Int?   @map("created_at")
  updatedId  Int?   @map("updated_id")
  updatedBy  String @default("") @map("updated_by") @db.VarChar(64)
  updatedAt  Int?   @map("updated_at")
  deletedAt  Int    @default(0) @map("delete_at") // 删除时间，使用 int 类型

  @@map("sys_media_category")
}

// 部门表
model SysDept {
  deptId    Int     @id @default(autoincrement()) @map("dept_id") // 部门ID
  parentId  Int     @default(0) @map("parent_id") // 父部门ID
  ancestors String? @map("ancestors") @db.VarChar(255) // 祖级列表
  deptName  String  @map("dept_name") @db.VarChar(50) // 部门名称
  sortOrder Int     @default(1) @map("sort_order") @db.TinyInt // 显示顺序
  leader    String? @map("leader") @db.VarChar(20) // 负责人
  phone     String? @map("phone") @db.VarChar(11) // 联系电话
  email     String? @map("email") @db.VarChar(50) // 邮箱
  status    Int     @default(1) @db.TinyInt // 部门状态（0停用 1正常）
  createdId Int?    @map("created_id") // 创建者ID
  createdBy String  @default("") @map("created_by") @db.VarChar(64) // 创建者
  createdAt Int?    @map("created_at") // 创建时间
  updatedId Int?    @map("updated_id") // 更新者ID
  updatedBy String  @default("") @map("updated_by") @db.VarChar(64) // 更新者
  updatedAt Int?    @map("updated_at") // 更新时间
  deletedAt Int     @default(0) @map("deleted_at") // 删除时间

  @@index([deptId, parentId, deptName])
  @@map("sys_dept")
}

// 用户与部门关联表
model SysUserDept {
  userId Int @map("user_id") // 用户ID
  deptId Int @map("dept_id") // 部门ID

  @@unique([userId, deptId])
  @@map("sys_user_dept")
}

// 岗位表
model SysPost {
  postId    Int    @id @default(autoincrement()) @map("post_id") // 岗位ID
  postCode  String @map("post_code") @db.VarChar(64) // 岗位编码
  postName  String @map("post_name") @db.VarChar(50) // 岗位名称
  sortOrder Int    @default(1) @map("sort_order") @db.TinyInt // 显示顺序
  status    Int    @default(1) @db.TinyInt // 岗位状态（0停用 1正常）
  remark    String @default("") @map("remark") @db.VarChar(500) // 备注
  createdId Int?   @map("created_id") // 创建者ID
  createdBy String @default("") @map("created_by") @db.VarChar(64) // 创建者
  createdAt Int?   @map("created_at") // 创建时间
  updatedId Int?   @map("updated_id") // 更新者ID
  updatedBy String @default("") @map("updated_by") @db.VarChar(64) // 更新者
  updatedAt Int?   @map("updated_at") // 更新时间
  deletedAt Int    @default(0) @map("deleted_at") // 删除时间

  @@index([postId, postCode, postName])
  @@map("sys_post")
}

// 用户与岗位关联表
model SysUserPost {
  userId Int @map("user_id") // 用户ID
  postId Int @map("post_id") // 岗位ID

  @@unique([userId, postId])
  @@map("sys_user_post")
}

// 系统访问日志表
model SysLoginLog {
  infoId        Int     @id @default(autoincrement()) @map("info_id") // 访问ID
  loginName     String? @map("login_name") @db.VarChar(50) // 登录账号
  ipaddr        String? @map("ipaddr") @db.VarChar(128) // 登录IP地址
  loginLocation String? @map("login_location") @db.VarChar(255) // 登录地点
  browser       String? @map("browser") @db.VarChar(50) // 浏览器类型
  os            String? @map("os") @db.VarChar(50) // 操作系统
  status        Int     @default(1) @map("status") @db.TinyInt // 登录状态（1成功 0失败）
  msg           String? @map("msg") @db.VarChar(255) // 提示消息
  loginTime     Int?    @map("login_time") // 访问时间
  userId        Int?    @map("user_id") // 用户ID

  @@index([infoId, loginName, ipaddr, status, loginTime])
  @@map("sys_login_log")
}

// 字典类型表
model SysDictType {
  dictId    Int     @id @default(autoincrement()) @map("dict_id") // 字典主键
  dictName  String  @default("") @map("dict_name") @db.VarChar(100) // 字典名称
  dictType  String  @unique @default("") @map("dict_type") @db.VarChar(100) // 字典类型
  status    Int     @default(1) @db.TinyInt // 状态（0停用 1正常）
  remark    String? @map("remark") @db.VarChar(500) // 备注
  createdId Int?    @map("created_id") // 创建者ID
  createdBy String  @default("") @map("created_by") @db.VarChar(64) // 创建者
  createdAt Int?    @map("created_at") // 创建时间
  updatedId Int?    @map("updated_id") // 更新者ID
  updatedBy String  @default("") @map("updated_by") @db.VarChar(64) // 更新者
  updatedAt Int?    @map("updated_at") // 更新时间
  deletedAt Int     @default(0) @map("deleted_at") // 删除时间

  @@index([dictId, dictType])
  @@map("sys_dict_type")
}

// 字典数据表
model SysDictData {
  dictCode  Int     @id @default(autoincrement()) @map("dict_code") // 字典编码
  dictSort  Int     @default(0) @map("dict_sort") // 字典排序
  dictLabel String  @default("") @map("dict_label") @db.VarChar(100) // 字典标签
  dictValue String  @default("") @map("dict_value") @db.VarChar(100) // 字典键值
  dictType  String  @default("") @map("dict_type") @db.VarChar(100) // 字典类型
  cssClass  String? @map("css_class") @db.VarChar(100) // 样式属性（其他样式扩展）
  listClass String? @map("list_class") @db.VarChar(100) // 表格回显样式
  isDefault Int     @default(0) @map("is_default") @db.TinyInt // 是否默认（0否 1是）
  status    Int     @default(1) @db.TinyInt // 状态（0停用 1正常）
  remark    String? @map("remark") @db.VarChar(500) // 备注
  createdId Int?    @map("created_id") // 创建者ID
  createdBy String  @default("") @map("created_by") @db.VarChar(64) // 创建者
  createdAt Int?    @map("created_at") // 创建时间
  updatedId Int?    @map("updated_id") // 更新者ID
  updatedBy String  @default("") @map("updated_by") @db.VarChar(64) // 更新者
  updatedAt Int?    @map("updated_at") // 更新时间
  deletedAt Int     @default(0) @map("deleted_at") // 删除时间

  @@unique([dictValue, dictType])
  @@index([dictType])
  @@map("sys_dict_data")
}

// 操作日志表
model SysOperationLog {
  operId        Int     @id @default(autoincrement()) @map("oper_id") // 日志主键
  title         String? @map("title") @db.VarChar(50) // 模块标题
  businessType  Int     @default(0) @map("business_type") // 业务类型（0其它 1新增 2修改 3删除）
  method        String? @map("method") @db.VarChar(100) // 方法名称
  requestMethod String? @map("request_method") @db.VarChar(10) // 请求方式
  operatorType  Int     @default(0) @map("operator_type") // 操作类别（0其它 1后台用户 2手机端用户）
  operName      String? @map("oper_name") @db.VarChar(50) // 操作人员
  deptName      String? @map("dept_name") @db.VarChar(50) // 部门名称
  operUrl       String? @map("oper_url") @db.VarChar(255) // 请求URL
  operIp        String? @map("oper_ip") @db.VarChar(128) // 主机地址
  operLocation  String? @map("oper_location") @db.VarChar(255) // 操作地点
  operParam     String? @map("oper_param") @db.Text // 请求参数
  jsonResult    String? @map("json_result") @db.Text // 返回参数
  status        Int     @default(1) @map("status") @db.TinyInt // 操作状态（0异常 1正常）
  errorMsg      String? @map("error_msg") @db.Text // 错误消息
  operAt        Int?    @map("oper_time") // 操作时间
  userId        Int?    @map("user_id") // 用户ID

  @@index([operId])
  @@map("sys_operation_log")
}
