// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// 用户表
model sysUser {
  userId    Int     @id @default(autoincrement())
  loginName String? @unique @map("login_name") // 用户名可选，因为可能使用手机号或邮箱作为主要登录方式
  email     String? @unique // 邮箱可选，因为可能使用手机号作为主要登录方式
  phone     String? @unique // 手机号可选，可以支持手机号登录
  password  String? // 如果用户使用第三方登录，密码可以为空
  salt      String? // 密码盐值
  nickname  String? // 用户的昵称
  realname  String? // 用户的真实姓名
  gender    Int     @default(0) @db.TinyInt // 用户性别，0 表示未知，1 表示男，2 表示女
  birthday  Int? // 用户的生日
  userType  Int     @default(0) @map("user_type") @db.TinyInt // 用户类型, 0 未激活，1 管理员，2 普通用户
  avatar    String? // 头像
  loginIp   String? @map("login_ip") // 最后登录IP
  loginAt   Int?    @map("login_at") // 最后登录时间
  status    Int     @default(1) @db.TinyInt // 用户状态，0 表示正常，1 表示禁用
  remark    String  @default("") @map("remark") @db.VarChar(500) // 备注
  createdAt Int     @map("create_at") // 使用 UNIX 时间戳（毫秒）
  updatedAt Int     @map("update_at") // 更新时间，使用 int 类型
  deletedAt Int     @default(0) @map("delete_at") // 删除时间，使用 int 类型

  @@index([userId, loginName, phone, email])
  @@map("sys_user")
}

// token表
model sysUserToken {
  id           Int    @id @default(autoincrement())
  userId       Int    @map("user_id") // 用户ID
  accessToken  String @unique @map("access_token") // token
  expiresAt    Int    @map("expires_at") // token过期时间
  refreshToken String @unique @map("refresh_token") // 刷新token
  reExpiresAt  Int    @map("re_expires_at") // 刷新token过期时间

  @@map("sys_user_token")
}

// 角色表
model sysRole {
  roleId      Int     @id @default(autoincrement())
  name        String // 角色名称
  description String? // 角色描述
  sortOrder   Int     @default(1) @map("sort_order") @db.TinyInt // 排序
  status      Int     @default(1) @db.TinyInt // 角色状态，0 表示禁用，1 表示正常
  createdAt   Int     @map("create_at") // 使用 UNIX 时间戳（毫秒）
  updatedAt   Int     @map("update_at") // 更新时间，使用 int 类型
  deletedAt   Int     @default(0) @map("delete_at") // 删除时间，使用 int 类型

  @@index([roleId, name])
  @@map("sys_role")
}

// 系统配置表
model sysOption {
  optionName  String @map("option_name") @db.VarChar(64)
  optionValue String @map("option_value") @db.Text

  @@unique([optionName])
  @@map("sys_option")
}

// 菜单表
model sysMenu {
  menuId    Int     @id @default(autoincrement()) @map("menu_id") // 菜单ID
  menuName  String  @map("menu_name") @db.VarChar(50) // 菜单名称
  parentId  Int     @default(0) @map("parent_id") // 父菜单ID
  sortOrder Int     @default(1) @map("sort_order") @db.TinyInt // 排序
  path      String  @default("") @map("path") @db.VarChar(200) // 路由地址
  component String? @map("component") @db.VarChar(255) // 组件路径
  query     String? @map("query") @db.VarChar(255) // 路由参数
  isFrame   Int     @default(0) @map("is_frame") // 是否为外链 （0否 1是）
  isCache   Int     @default(0) @map("is_cache") // 是否缓存（0不缓存 1缓存）
  menuType  Int     @default(0) @map("menu_type") @db.TinyInt // 菜单类型 （0目录 1菜单 2按钮）
  visible   Int     @default(1) @map("visible") @db.TinyInt // 菜单状态（0隐藏 1显示）
  status    Int     @default(1) @map("status") @db.TinyInt // 菜单状态（0停用 1正常）
  perms     String? @map("perms") @db.VarChar(100) // 权限标识
  icon      String  @map("icon") @db.VarChar(100) // 菜单图标
  createdId Int?    @map("created_id")
  createdBy String  @default("") @map("created_by") @db.VarChar(64)
  createdAt Int?    @map("created_at")
  updatedId Int?    @map("updated_id")
  updatedBy String  @default("") @map("updated_by") @db.VarChar(64)
  updatedAt Int?    @map("updated_at")
  remark    String  @default("") @map("remark") @db.VarChar(500)

  @@index([menuId, menuName, perms])
  @@map("sys_menu")
}

// 权限表
model casbinRule {
  ptype String
  v0    String
  v1    String
  v2    String?
  v3    String?
  v4    String?
  v5    String?

  @@id([ptype, v0, v1]) // 联结表的复合主键
  @@map("casbin_rule")
}

// 系统接口表
model sysApi {
  id          Int     @id @default(autoincrement())
  path        String // 路径
  method      String // 方法
  description String? // 描述
  group       String? // 分组

  @@unique([path, method])
  @@map("sys_api")
}

// 接口菜单关系表
model sysMenuApi {
  menuId Int @map("menu_id")
  apiId  Int @map("api_id")

  @@unique([menuId, apiId])
  @@map("sys_menu_api")
}

// 媒体资源表
model sysMedia {
  mediaId    Int    @map("media_id") @id @default(autoincrement())
  fileSize   BigInt @map("file_size") @db.BigInt
  fileKey    String @map("file_key") @db.VarChar(64)
  remarkName String @map("remark_name") @db.VarChar(100)
  fileName   String @map("file_name") @db.VarChar(100)
  filePath   String @map("file_path") @db.VarChar(100)
  resolution String @db.VarChar(32)
  fileMd5    String @map("file_md5") @db.VarChar(32)
  fileSha1   String @map("file_sha1") @db.VarChar(40)
  suffix     String @db.VarChar(10)
  assetType  Int    @map("type") @db.TinyInt
  status     Int    @default(1) @db.TinyInt
  createdId  Int?   @map("created_id")
  createdBy  String @default("") @map("created_by") @db.VarChar(64)
  createdAt  Int?   @map("created_at")
  deletedAt  Int    @default(0) @map("delete_at") // 删除时间，使用 int 类型

  @@map("sys_media")
}

// 文章表
model cmsArticle {
  articleId      Int                      @id @default(autoincrement()) @map("article")
  postFormat     Int?                     @default(1) @map("post_format") @db.TinyInt() // 文章格式
  seoTitle       String?                  @map("seo_title") @db.VarChar(100) // 三要素标题，用于seo优化
  seoKeywords    String?                  @map("seo_keywords") @db.VarChar(255) // 三要素关键词，用于seo优化
  seoDescription String?                  @map("seo_description") @db.VarChar(255) // 三要素描述，用于seo优化
  thumbnail      String?                  @map("thumbnail") @db.VarChar(255) // 封面
  title          String                   @map("title") @db.VarChar(100) // 标题
  content        String?                  @map("content") @db.LongText // 内容
  keywords       String?                  @map("keywords") @db.VarChar(255) // 关键词
  excerpt        String?                  @map("excerpt") @db.VarChar(255) // 摘要
  source         String?                  @map("source") @db.VarChar(255) // 文章来源
  isTop          Int?                     @map("is_top") @db.TinyInt() // 置顶
  hits           Int?                     @map("hits") // 点击数
  favorites      Int?                     @map("favorites") // 收藏数
  likes          Int?                     @map("likes") // 点赞数
  comments       Int?                     @map("comments") // 点赞数
  more           Json?                    @map("more") @db.Json // 扩展属性
  articleStatus  Int?                     @default(1) @map("article_status") @db.TinyInt // 文章状态
  commentStatus  Int?                     @default(1) @map("comment_status") @db.TinyInt // 评论状态
  order          Int?                     @map("order") // 排序
  publishedAt    Int?                     @map("published_at") // 发布时间
  createId       Int                      @map("create_id")
  creator        String                   @map("creator") @db.VarChar(50)
  updateId       Int                      @map("update_id")
  updater        String                   @map("updater") @db.VarChar(50)
  createdAt      Int                      @map("created_at")
  updatedAt      Int                      @map("updated_at")
  deletedAt      Int                      @default(0) @map("deleted_at")
  categories     cmsArticleCategoryPost[]
  articleTags    cmsArticleTagPost[]

  @@map("cms_article")
}

// 文章分类表
model cmsArticleCategory {
  articleCategoryId Int                      @id @default(autoincrement()) @map("articleCategoryId")
  parentId          Int                      @map("parent_id") // 分类id
  seoTitle          String?                  @map("seo_title") @db.VarChar(100) // 三要素标题，用于seo优化
  seoKeywords       String?                  @map("seo_keywords") @db.VarChar(255) // 三要素关键词，用于seo优化
  seoDescription    String?                  @map("seo_description") @db.VarChar(255) // 三要素描述，用于seo优化
  name              String                   @map("name") @db.VarChar(100)
  icon              String?                  @map("icon") @db.VarChar(255) // 分类图标 
  description       String?                  @map("description") @db.VarChar(255)
  status            Int?                     @default(1) @map("status") @db.TinyInt()
  articleCount      Int                      @map("article_count") // 文章数
  path              String                   @map("path") @db.VarChar(255)
  order             Int?                     @map("order") // 排序
  createId          Int                      @map("create_id")
  creator           String                   @map("creator") @db.VarChar(50)
  updateId          Int                      @map("update_id")
  updater           String                   @map("updater") @db.VarChar(50)
  createdAt         Int                      @map("created_at")
  updatedAt         Int                      @map("updated_at")
  deletedAt         Int                      @default(0) @map("deleted_at")
  articles          cmsArticleCategoryPost[]

  @@map("cms_article_category")
}

// 文章和分类关联表
model cmsArticleCategoryPost {
  articleId         Int                @map("article_id") // 文章id
  articleCategoryId Int                @map("article_category_id") //分类id
  order             Int?               @map("order") // 排序
  article           cmsArticle         @relation(fields: [articleId], references: [articleId])
  articleCategory   cmsArticleCategory @relation(fields: [articleCategoryId], references: [articleCategoryId])

  @@unique([articleId, articleCategoryId])
  @@map("cms_article_category_post")
}

// 文章标签表
model cmsArticleTag {
  tagId        Int                 @id @default(autoincrement()) // 标签id
  name         String              @unique // 标签名称
  status       Int                 @default(1) // 状态
  articleCount Int                 @map("article_count") // 文章数
  articles     cmsArticleTagPost[]

  @@map("cms_article_tag")
}

// 文章和标签关联表
model cmsArticleTagPost {
  articleId  Int           @map("article_id") // 文章id
  tagId      Int           @map("tag_id") // 标签id
  article    cmsArticle    @relation(fields: [articleId], references: [articleId])
  articleTag cmsArticleTag @relation(fields: [tagId], references: [tagId])

  @@unique([articleId, tagId])
  @@map("cms_article_tag_post")
}
